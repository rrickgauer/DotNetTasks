<ui:UiPage x:Class="Tasks.WpfUi.Views.Pages.ViewEventPage"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
           xmlns:local="clr-namespace:Tasks.WpfUi.Views.Pages"
           xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
           xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
           xmlns:helpers="clr-namespace:Tasks.WpfUi.Helpers"
           mc:Ignorable="d" 
           d:DesignWidth="800"
           Scrollable="True"
           d:DataContext="{d:DesignInstance local:ViewEventPage, IsDesignTimeCreatable=False}"
           Title="ViewEventPage">

    <ui:UiPage.Resources>
        <Style TargetType="StackPanel" x:Key="FormStackPanel">
            <Setter Property="Margin" Value="0,15,0,15" />
        </Style>

        <Style TargetType="Grid" x:Key="GridFormStyle">
            <Setter Property="Margin" Value="0,15,0,15" />
        </Style>


    </ui:UiPage.Resources>

    <ui:UiPage.InputBindings>
        <!--Submit form-->
        <KeyBinding Modifiers="Ctrl" Key="Enter" Command="{Binding ViewModel.SaveEventCommand}" />

        <!--Exit-->
        <KeyBinding Key="Esc" Command="{Binding ViewModel.GoBackCommand}" />
        
    </ui:UiPage.InputBindings>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Border Padding="20,0" Grid.Row="0" Grid.ColumnSpan="2">
            <StackPanel>
                <ui:Button Icon="Dismiss24" ToolTip="Go back" HorizontalAlignment="Right" Command="{Binding ViewModel.GoBackCommand}"/>
            </StackPanel>
        </Border>

        <Border Grid.Row="1" Grid.Column="0" Padding="20,0">
            <StackPanel  IsEnabled="{Binding ViewModel.FormIsEnabled}">

                <!--Name-->
                <StackPanel Style="{StaticResource FormStackPanel}">
                    <Label>Name</Label>
                    <ui:TextBox Text="{Binding ViewModel.Event.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>


                <Grid Style="{StaticResource GridFormStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!--Starts on-->
                    <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,10,0">
                        <Label>Starts on</Label>
                        <DatePicker Text="{Binding ViewModel.Event.StartsOn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                IsTodayHighlighted="True"
                                x:Name="startsOnDatepickerInput"
                                SelectedDateChanged="startsOnDatepickerInput_SelectedDateChanged"/>
                    </StackPanel>

                    <!--Ends on-->
                    <StackPanel Grid.Column="1">
                        <Label>Ends on</Label>
                        <DatePicker Text="{Binding ViewModel.Event.EndsOn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsTodayHighlighted="True"
                                x:Name="endsOnDatepickerInput"/>
                    </StackPanel>
                </Grid>

                <!--Starts at-->
                <StackPanel Style="{StaticResource FormStackPanel}">
                    <Label>Starts at</Label>
                    <xctk:TimePicker 
                        Style="{StaticResource TimePickerStyle}"
                        Value="{Binding ViewModel.Event.StartsAt, Mode=TwoWay, Converter={StaticResource TimeSpanConverter}, UpdateSourceTrigger=PropertyChanged}" 
                        />
                </StackPanel>


                <Grid Style="{StaticResource GridFormStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!--Frequency-->
                    <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,10,0">
                        <Label>Frequency</Label>
                        <ComboBox ItemsSource="{Binding ViewModel.FrequencyOptions, Mode=OneTime}" 
                              SelectedItem="{Binding ViewModel.Event.Frequency, Mode=TwoWay}" />
                    </StackPanel>

                    <!--Separation-->
                    <StackPanel Grid.Column="1">
                        <Label>Separation</Label>
                        <ui:NumberBox Value="{Binding ViewModel.Event.Separation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                  IntegersOnly="True"
                                  Min="1"
                                  Step="1"/>
                    </StackPanel>
                </Grid>



                <Grid Style="{StaticResource GridFormStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!--Recurrence day-->
                    <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,10,0">
                        <Label>Day</Label>
                        <ui:TextBox Text="{Binding ViewModel.Event.RecurrenceDay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>

                    <!--Recurrence week-->
                    <StackPanel Grid.Column="1">
                        <Label>Week</Label>
                        <ui:TextBox Text="{Binding ViewModel.Event.RecurrenceWeek, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                </Grid>


                <Grid Style="{StaticResource GridFormStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!--Phone number-->
                    <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,10,0">
                        <Label>Phone number</Label>
                        <ui:TextBox Text="{Binding ViewModel.Event.PhoneNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                    d:Text="847-254-6584"
                                    />
                    </StackPanel>

                    <!--Location-->
                    <StackPanel Grid.Column="1">
                        <Label>Location</Label>
                        <ui:TextBox Text="{Binding ViewModel.Event.Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                </Grid>


                <StackPanel Orientation="Horizontal" Style="{StaticResource FormStackPanel}">
                    <ui:Button d:Content="Save changes"
                               Content="{Binding ViewModel.SaveButtonText}"
                               Command="{Binding ViewModel.SaveEventCommand}" Margin="0,0,10,0"/>
                    
                    <ui:Button Content="Delete event" 
                               Command="{Binding ViewModel.DeleteEventCommand}"
                               IsEnabled="{Binding ViewModel.EventExists}" />
                </StackPanel>

            </StackPanel>

        </Border>

        <Border Grid.Row="1"
                Padding="20, 0"
                Grid.Column="1" Margin="0,30,0,0">
            <StackPanel>
                <ui:Button Icon="Tag24" 
                           FontSize="16"
                           ToolTip="Edit assigned labels"
                           HorizontalAlignment="Stretch" 
                           Height="34.62" 
                           Command="{Binding ViewModel.GoToLabelAssignmentsPageCommand}"
                           />
                
            </StackPanel>
        </Border>

    </Grid>
</ui:UiPage>
