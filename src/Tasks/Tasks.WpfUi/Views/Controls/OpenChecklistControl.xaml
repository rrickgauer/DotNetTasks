<UserControl x:Class="Tasks.WpfUi.Views.Controls.OpenChecklistControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Tasks.WpfUi.Views.Controls"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns:helpers="clr-namespace:Tasks.WpfUi.Helpers"
             Width="500"
             Margin="8"
             mc:Ignorable="d" 
             d:Foreground="White"
             d:DataContext="{d:DesignInstance local:OpenChecklistControl, IsDesignTimeCreatable=False}"
             d:DesignHeight="450">
    <UserControl.Resources>
        <helpers:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </UserControl.Resources>
    <Border>
        <ui:Card VerticalAlignment="Top">
            <StackPanel>
                <!--Loading Progress Spinner-->
                <ui:ProgressRing IsIndeterminate="True"
                                    Visibility="{Binding ViewModel.IsProgressBarVisible, Converter={StaticResource BoolToVisibilityConverter}}" 
                                    d:Visibility="Collapsed" />


                <!--Content-->
                <Grid Visibility="{Binding ViewModel.IsProgressBarVisible, Converter={StaticResource BoolToVisibilityInverseConverter}}"
                      d:Visibility="Visible">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    
                    <!--Header-->
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    
                        <!--Checklist Title-->
                        <TextBlock Text="{Binding ViewModel.Checklist.Title}"
                                    Grid.Column="0"
                                    d:Text="Checklist title" />

                        <StackPanel Orientation="Horizontal" Grid.Column="1">

                            <!--Checklist dropdown menu-->
                            <ui:Button Icon="MoreHorizontal20"
                                       Click="OpenChecklistDropdownMenuButton_Click"
                                       Name="OpenChecklistDropdownMenuButton">

                                <ui:Button.ContextMenu>
                                    <ContextMenu DataContext="{Binding Source={StaticResource Proxy}, Path=Data}"
                                                 d:DataContext="{d:DesignInstance local:OpenChecklistControl, IsDesignTimeCreatable=False}">
                                        
                                        <!--Open up the checklist page-->
                                        <ui:MenuItem Header="Settings" 
                                                     Command="{Binding ViewModel.OpenChecklistSettingsPageCommand}"
                                                     ToolTip="Edit the checklist" />

                                        <!--Delete the checklist-->
                                        <ui:MenuItem Header="Delete" 
                                                     Command="{Binding ViewModel.DeleteOpenChecklistCommand}"
                                                     ToolTip="Delete the checklist" />

                                        <Separator />

                                        <ui:MenuItem Header="Mark all items">
                                            
                                            <!--Mark items complete-->
                                            <ui:MenuItem Header="Complete" 
                                                         ToolTip="Mark all items complete"
                                                         CommandParameter="{StaticResource TrueValue}" />

                                            <!--Mark items incomplete-->
                                            <ui:MenuItem Header="Incomplete" 
                                                         ToolTip="Mark all items incomplete"
                                                         CommandParameter="{StaticResource FalseValue}" />
                                        </ui:MenuItem>

                                        <!--Show completed items-->
                                        <ui:MenuItem Header="Show completed items" 
                                                     ToolTip="Show all the completed items in the checklist"
                                                     IsCheckable="True" />

                                        <!--Remove completed items-->
                                        <ui:MenuItem Header="Remove completed items" 
                                                     ToolTip="Remove all the completed items from the checklist"/>

                                    </ContextMenu>
                                </ui:Button.ContextMenu>
                            
                            </ui:Button>
                        
                            <!--Close checklist button-->
                            <ui:Button Icon="Dismiss20" 
                                       Command="{Binding ViewModel.CloseButtonClickedCommand}"
                                       Grid.Column="1"
                                       ToolTip="Close this checklist" />
                        </StackPanel>

                    </Grid>


                    <Border Grid.Row="1">
                        <ContentControl Content="{Binding ViewModel.ChecklistItemsControl}"/>
                    </Border>

                </Grid>

                
            </StackPanel>
            
            

        </ui:Card>
        
    </Border>
</UserControl>
